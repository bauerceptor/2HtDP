; 
; Problem:
; 
; DESIGN a function called image-area that consumes an image and
; produces the area of that image. For the area it is sufficient
; to just multiply the image's width by its height.
; 

(require 2htdp/image)


;; Image -> Natural
;; produces area of an input image

(check-expect (image-area (square 10 "solid" "red")) 100)
(check-expect (image-area (rectangle 10 20 "solid" "blue")) 200)
(check-expect (image-area (square 1 "solid" "purple")) 1)


;(define (image-area img) 0)    ; stub

;(define (image-area img)       ; template
;  (... ))

(define (image-area img)
  (* (image-height img)
     (image-width img)
   )
)